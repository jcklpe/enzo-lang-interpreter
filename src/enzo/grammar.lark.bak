?start: stmt+

?stmt: assign_stmt
     | expr               -> expr_stmt

# ── assignment ─────────────────────────────────────
?assign_stmt: NAME ":"  expr  -> bind
            | NAME "<:" expr  -> rebind
            | expr ":>" NAME  -> rebind_lr

# ── expressions (precedence) ───────────────────────
?expr: sum

?sum: product
    | sum "+" product  -> add
    | sum "-" product  -> sub

?product: postfix
        | product "*" postfix  -> mul
        | product "/" postfix  -> div

# postfix: zero-or-more selectors (.3　.$i　.prop)
?postfix: primary (DOTINT | DOTVAR | DOTPROP)*  -> index_chain

# ── primary atoms ─────────────────────────────────
?primary: list
        | table
        | NUMBER   -> number
        | STRING   -> string
        | NAME     -> var
        | "(" expr ")"  -> paren

list : "[" [expr ("," expr)*] "]"  -> list
table: "{" [pair ("," pair)*] "}"  -> table
pair : NAME ":" expr               -> kvpair    # key keeps $

# ── tokens ────────────────────────────────────────
NAME      : /\$[a-zA-Z0-9_-]+/
DOTINT.5  : /\.[1-9][0-9]*/            // .1 .12
DOTVAR.6  : /\.\$[a-zA-Z0-9_-]+/       // .$i
DOTPROP.6 : /\.[a-zA-Z][a-zA-Z0-9_-]*/ // .name

%import common.NUMBER
%import common.ESCAPED_STRING -> STRING
%import common.WS_INLINE
%ignore WS_INLINE
